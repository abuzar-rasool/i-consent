generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("POSTGRES_PRISMA_URL") // uses connection pooling
  directUrl = env("POSTGRES_URL_NON_POOLING") // uses a direct connection
}

model ConsentForm {
  id                          String                 @id @default(uuid())
  institution                 String
  researchType                String
  title                       String
  purpose                     String
  goal                        String
  startDate                   DateTime
  endDate                     DateTime
  duration                    Int
  durationUnit                String
  participants                Int
  studyOptions                StudyOptions[]
  compensation                Compensation
  procedureSteps              String[]
  collectedData               CollectedData[]
  anonymization               Anonymization
  publication                 Publication
  principalInvestigator       String
  principalInvestigatorEmail  String
  researcherNames             String?
  researcherEmails            String?
  funding                     String?
  ethicalCommittee            String?
  participantResponses        ParticipantResponse[]
  signingMethod               SigningMethod
  createdAt                   DateTime               @default(now())
  updatedAt                   DateTime               @updatedAt
}



model ParticipantResponse {
  id               String                @id @default(uuid())
  consentFormId    String
  consentForm      ConsentForm           @relation(fields: [consentFormId], references: [id])
  participantEmail String
  consentState     ConsentState
  firstName        String?
  lastName         String?
  signature        File?
  createdAt        DateTime              @default(now())
  updatedAt        DateTime              @updatedAt
}

enum ConsentState {
  NOT_GRANTED
  GRANTED
}

enum StudyOptions {
  REPEATED_PARTICIPATION_ALLOWED
  SURVEY_QUESTIONS
}

enum Compensation {
  NONE
  EUR1
  EUR5
  EUR10
  EUR15
  EUR20
  HALF_CREDIT_POINT
  ONE_CREDIT_POINT
}

enum CollectedData {
  DEMOGRAPHICS
  CONTACT_DATA
  USER_INPUT
  PHOTOS
  VIDEOS
  AUDIO
  MOTION
  EYE_MOVEMENT
  PHYSIOLOGICAL_DATA
  SCREEN_CAPTURE
  BODY_METRICS
  MANUAL_NOTES
}

enum Anonymization {
  NO
  PSEUDO
  FULL
}

enum Publication {
  FULL_DATASET
  AGGREGATED_RESULTS
}

enum SigningMethod {
  CHECK_BOX
  SIGNATURE
}

model File {
  id                      Int                 @id @default(autoincrement())
  content                 Bytes
  participantResponseId   String @unique
  participantResponse     ParticipantResponse @relation(fields: [participantResponseId], references: [id], onDelete: Cascade)
  createdAt               DateTime            @default(now())
  updatedAt               DateTime            @updatedAt
}
